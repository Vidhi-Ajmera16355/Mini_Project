{"ast":null,"code":"var _jsxFileName = \"E:\\\\mini-project\\\\seizure-detection-frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SeizureAlert from \"../components/Alert\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [eegData, setEegData] = useState([]);\n  const [alertMessage, setAlertMessage] = useState(null);\n  useEffect(() => {\n    // Simulate real-time EEG data\n    const interval = setInterval(() => {\n      setEegData(prevData => [...prevData.slice(-50),\n      // Keep the last 50 data points\n      Math.random() * 100]);\n    }, 1000);\n\n    // Simulate seizure detection\n    setTimeout(() => {\n      setAlertMessage(\"Seizure detected in real-time data!\");\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const data = {\n    labels: Array.from({\n      length: eegData.length\n    }, (_, i) => i),\n    datasets: [{\n      label: \"EEG Data\",\n      data: eegData,\n      borderColor: \"rgba(75, 192, 192, 1)\",\n      borderWidth: 2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Real-Time EEG Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), alertMessage && /*#__PURE__*/_jsxDEV(SeizureAlert, {\n      message: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"50f1r5d1KNV+rHSsRoELFelokZc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","SeizureAlert","Line","jsxDEV","_jsxDEV","Home","_s","eegData","setEegData","alertMessage","setAlertMessage","interval","setInterval","prevData","slice","Math","random","setTimeout","clearInterval","data","labels","Array","from","length","_","i","datasets","label","borderColor","borderWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["E:/mini-project/seizure-detection-frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SeizureAlert from \"../components/Alert\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nfunction Home() {\r\n  const [eegData, setEegData] = useState([]);\r\n  const [alertMessage, setAlertMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Simulate real-time EEG data\r\n    const interval = setInterval(() => {\r\n      setEegData((prevData) => [\r\n        ...prevData.slice(-50), // Keep the last 50 data points\r\n        Math.random() * 100,\r\n      ]);\r\n    }, 1000);\r\n\r\n    // Simulate seizure detection\r\n    setTimeout(() => {\r\n      setAlertMessage(\"Seizure detected in real-time data!\");\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const data = {\r\n    labels: Array.from({ length: eegData.length }, (_, i) => i),\r\n    datasets: [\r\n      {\r\n        label: \"EEG Data\",\r\n        data: eegData,\r\n        borderColor: \"rgba(75, 192, 192, 1)\",\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Real-Time EEG Data</h2>\r\n      <Line data={data} />\r\n      {alertMessage && <SeizureAlert message={alertMessage} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCJ,UAAU,CAAEK,QAAQ,IAAK,CACvB,GAAGA,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC;MAAE;MACxBC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CACpB,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;;IAER;IACAC,UAAU,CAAC,MAAM;MACfP,eAAe,CAAC,qCAAqC,CAAC;IACxD,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMQ,aAAa,CAACP,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,IAAI,GAAG;IACXC,MAAM,EAAEC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEhB,OAAO,CAACgB;IAAO,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC;IAC3DC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,UAAU;MACjBR,IAAI,EAAEZ,OAAO;MACbqB,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B9B,OAAA,CAACF,IAAI;MAACiB,IAAI,EAAEA;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnBzB,YAAY,iBAAIL,OAAA,CAACH,YAAY;MAACkC,OAAO,EAAE1B;IAAa;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV;AAAC5B,EAAA,CAxCQD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AA0Cb,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}